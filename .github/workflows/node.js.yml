# Name of the workflow
name: Node.js CI

# Specifies when the workflow should be triggered
on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # This allows creating releases
      pull-requests: write

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run Linter
        run: npx eslint .

      - name: Build Project
        run: npm run build --if-present

      - name: Run Tests
        run: npm test

  bump_version_and_tag:
    name: Bump Version and Create Tag
    runs-on: ubuntu-latest
    needs: build  # Ensures version bump runs only after CI checks pass
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.26.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          
      - name: Set version output from tag
        run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: bump_version_and_tag  # Ensures release happens after tag is created
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set tag name
        id: set_tag_name
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/v1}
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false



